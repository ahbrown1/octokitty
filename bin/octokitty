#!/usr/bin/env ruby

require 'octokit'
require 'json'

DFLT_ENDPT = 'https://github.com/api/v3'

github = Octokit::Client.new auto_paginate: true, access_token: ENV.fetch('GITHUB_ACCESS_TOKEN'), api_endpoint: ENV.fetch( 'GITHUB_API_ENDPOINT', DFLT_ENDPT )
command = File.basename($0).gsub('-', '_')

if command == 'octokitty'
  if ARGV.empty? || (ARGV.first == '--help')
    puts 'usage: octokitty <function>'
    exit false
  else
    if ARGV.first == '--list'
      puts github.class.ancestors.select { |a| a.to_s.start_with? github.class.to_s }.reject { |a| a == github.class }.flat_map { |a| a.instance_methods }
      exit true
    end
    command = ARGV.shift.gsub('-', '_')
  end
end

required, optional = github.method(command).parameters.partition { |p,_| p == :req }.map { |l| l.flat_map { |p| p.last } }

if (ARGV.first == '--help') || (ARGV.length < required.length)
  printf "usage: %s %s %s\n", command, required.map { |r| "<#{r}>" }.join(' '), optional.map { |o| "[#{o}]" }.join(' ')
  exit false
end

arguments = ARGV.shift(required.length)
options = ARGV.select { |a| a.start_with? '--' }.map{ |a| a[2..-1].to_sym }.zip(ARGV.reject { |a| a.start_with? '--' }).to_h

response = github.method(command).call(*arguments, options)
puts JSON.dump(response.class == Sawyer::Resource ? response.to_h : response.map(&:to_h))
